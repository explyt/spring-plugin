explyt.spring.ai.actions=Explyt Spring AI Actions
explyt.spring.ai.action.prop.to.yaml=Convert Properties to YAML
explyt.spring.ai.action.yaml.to.prop=Convert YAML to Properties
explyt.spring.ai.action.dto.to.jpa=Convert Dto to Entity
explyt.spring.ai.action.jpa.to.dto=Convert Entity to Dto
explyt.spring.ai.action.controller.to.openapi=Convert Spring Controller to Openapi File
explyt.spring.ai.action.openapi.to.controller=Convert Openapi File to Spring Controller
explyt.spring.ai.action.curl.to.http=Convert Curl to Http
explyt.spring.ai.action.post.to.http=Convert Postman Collection to Http
explyt.spring.ai.action.kafka.conf=Generate Kafka Config
explyt.spring.ai.action.security.conf=Generate Security Config
explyt.spring.ai.action.db.to.jpa=Convert Liquibase/Flyway File to Entity
#suggest
explyt.spring.ai.suggest.about=About It
explyt.spring.ai.suggest.install=Install Plugin

#prompts
action.prompt.convert.yaml=Convert this yaml file `{0}` to the `.properties` format. Remain commentaries if there is any. Save result files in the original directory
action.prompt.convert.properties=Convert this property file `{0}` to the `.yaml` format. Remain commentaries if there is any. Save result files in the original directory
action.prompt.convert.controller=Convert this Spring Controller class `{0}` to the `openapi yaml file`. Remain commentaries if there is any. Save result to separate files and to the corresponding directory
action.prompt.convert.openapi=Convert this OpenApi file `{0}` to the `Spring Controller file`. Save result to separate files and to the corresponding directory
action.prompt.convert.entity=Create new `DTO classes` from these `Jpa Entity classes` `{0}`. Save result files to the corresponding directory
action.prompt.convert.dto=Create new `Jpa Entity classes` from these `DTO classes` `{0}`. Save result files to the corresponding directory
action.prompt.convert.curl=Convert this curl `{0}` to RFC 7230, add it to this Intellij Http file `{1}`
action.prompt.convert.postman=Convert the postman collection to RFC 7230, add it to this Intellij Http file `{0}`

